version: '3.8'
services:
  airflow-postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - airflow_postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  minio:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  sources-postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"

  warehouse-postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./data/staging_init.sql:/docker-entrypoint-initdb.d/staging_init.sql
    ports:
      - "5435:5432"

  redis:
    image: redis:6
    ports:
      - "6379:6379"

  airflow-init:
    image: apache/airflow:2.10.2
    depends_on:
      - airflow-postgres
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ../requirements.txt:/requirements.txt
    entrypoint: bash
    command: >-
      -c "pip install --no-cache-dir -r /requirements.txt && \
      airflow db upgrade && \
      airflow users list | grep -q ' admin ' || airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin && \
      airflow variables import /opt/airflow/variables.json || true && \
      airflow connections import /opt/airflow/connections.yaml || true"

  airflow-webserver:
    image: apache/airflow:2.10.2
    depends_on:
      - airflow-init
      - airflow-postgres
      - redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - PYTHONPATH=/opt/airflow/dags:${PYTHONPATH}
      - AIRFLOW__LOGGING__REMOTE_LOGGING=True
      - AIRFLOW__LOGGING__REMOTE_BASE_LOG_FOLDER=s3://airflow-logs
      - AIRFLOW__LOGGING__REMOTE_LOG_CONN_ID=s3-conn
      - AIRFLOW__METRICS__STATSD_ON=True
      - AIRFLOW__METRICS__STATSD_HOST=statsd-exporter
      - AIRFLOW__METRICS__STATSD_PORT=9125
      - SLACK_TOKEN=${SLACK_TOKEN}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./data/airflow_variables_init.json:/opt/airflow/variables.json
      - ./data/airflow_connections_init.yaml:/opt/airflow/connections.yaml
      - ./dbt:/opt/airflow/dbt
      - ../requirements.txt:/requirements.txt
    ports:
      - "8080:8080"
    entrypoint: bash
    command: -c "pip install --no-cache-dir -r /requirements.txt && exec airflow webserver"

  airflow-scheduler:
    image: apache/airflow:2.10.2
    depends_on:
      - airflow-init
      - airflow-postgres
      - redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - PYTHONPATH=/opt/airflow/dags:${PYTHONPATH}
      - AIRFLOW__LOGGING__REMOTE_LOGGING=True
      - AIRFLOW__LOGGING__REMOTE_BASE_LOG_FOLDER=s3://airflow-logs
      - AIRFLOW__LOGGING__REMOTE_LOG_CONN_ID=s3-conn
      - AIRFLOW__METRICS__STATSD_ON=True
      - AIRFLOW__METRICS__STATSD_HOST=statsd-exporter
      - AIRFLOW__METRICS__STATSD_PORT=9125
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./data/airflow_variables_init.json:/opt/airflow/variables.json
      - ./data/airflow_connections_init.yaml:/opt/airflow/connections.yaml
      - ./dbt:/opt/airflow/dbt
      - ../requirements.txt:/requirements.txt
    entrypoint: bash
    command: -c "pip install --no-cache-dir -r /requirements.txt && exec airflow scheduler"

  airflow-worker:
    image: apache/airflow:2.10.2
    depends_on:
      - airflow-init
      - airflow-postgres
      - redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - PYTHONPATH=/opt/airflow/dags:${PYTHONPATH}
      - AIRFLOW__LOGGING__REMOTE_LOGGING=True
      - AIRFLOW__LOGGING__REMOTE_BASE_LOG_FOLDER=s3://airflow-logs
      - AIRFLOW__LOGGING__REMOTE_LOG_CONN_ID=s3-conn
      - AIRFLOW__METRICS__STATSD_ON=True
      - AIRFLOW__METRICS__STATSD_HOST=statsd-exporter
      - AIRFLOW__METRICS__STATSD_PORT=9125
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./data/airflow_variables_init.json:/opt/airflow/variables.json
      - ./data/airflow_connections_init.yaml:/opt/airflow/connections.yaml
      - ./dbt:/opt/airflow/dbt
      - ../requirements.txt:/requirements.txt
    entrypoint: bash
    command: -c "pip install --no-cache-dir -r /requirements.txt && exec airflow celery worker"

volumes:
  airflow_postgres_data:
  minio_data: